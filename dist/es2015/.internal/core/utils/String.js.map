{"version":3,"file":"String.js","sourceRoot":"","sources":["../../../../../src/.internal/core/utils/String.ts"],"names":[],"mappings":"AASA;;;;;GAKG;AAEH;;;;;;;;GAQG;AACH,MAAM,gBAAgB,CAAS,EAAE,CAAS;IACzC,IAAI,CAAC,KAAK,CAAC,EAAE;QACZ,OAAO,CAAC,CAAC;KAET;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QACjB,OAAO,CAAC,CAAC,CAAC;KAEV;SAAM;QACN,OAAO,CAAC,CAAC;KACT;AACF,CAAC;AAGD;;;;;GAKG;AAEH;;;;;;;;GAQG;AACH,MAAM,iBAAiB,MAAc,EAAE,MAAc;IACpD,OAAO,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,CAAC;AAED;;;;;GAKG;AACH,MAAM,iBAAiB,KAAa;IACnC,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,MAAM,GAAG,gEAAgE,CAAC;IAC9E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC/B,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;KAChE;IACD,OAAO,GAAG,CAAC;AACZ,CAAC","sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Ordering } from \"./Order\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * COMPARING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Comparing function used for ordering.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Use localeCompare\r\n * @param a  Item 1\r\n * @param b  Item 2\r\n * @return Result\r\n */\r\nexport function order(a: string, b: string): Ordering {\r\n\tif (a === b) {\r\n\t\treturn 0;\r\n\r\n\t} else if (a < b) {\r\n\t\treturn -1;\r\n\r\n\t} else {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * OTHER FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string: string, amount: number): string {\r\n\treturn new Array(amount + 1).join(string);\r\n}\r\n\r\n/**\r\n * Generates a random string `characters` length.\r\n *\r\n * @param chars  Number of characters\r\n * @return Random string\r\n */\r\nexport function random(chars: number): string {\r\n\tlet res = \"\";\r\n\tlet choice = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\tfor (let i = 0; i < chars; i++) {\r\n\t\tres += choice.charAt(Math.floor(Math.random() * choice.length));\r\n\t}\r\n\treturn res;\r\n}\r\n"]}